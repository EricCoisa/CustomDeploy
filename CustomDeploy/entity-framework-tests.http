### Entity Framework + SQLite API Tests
### Arquivo de testes para as novas APIs implementadas

### Variables
@baseUrl = https://localhost:7294
@token = {{login.response.body.token}}

### 1. Login (Administrador padrão)
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "admin@customdeploy.com",
  "password": "admin123"
}

### 2. Validar Token
GET {{baseUrl}}/auth/validate-token
Authorization: Bearer {{token}}

### 3. Listar Todos os Usuários (Admin only)
GET {{baseUrl}}/api/usuarios
Authorization: Bearer {{token}}

### 4. Criar Novo Usuário (Admin only)
POST {{baseUrl}}/api/usuarios
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "nome": "João Silva",
  "email": "joao@empresa.com",
  "senha": "senha123",
  "acessoNivelId": 2
}

### 5. Obter Usuário por ID
GET {{baseUrl}}/api/usuarios/1
Authorization: Bearer {{token}}

### 6. Atualizar Usuário
PUT {{baseUrl}}/api/usuarios/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "nome": "Administrador Atualizado"
}

### 7. Verificar se Email Existe
GET {{baseUrl}}/api/usuarios/verificar-email/admin@customdeploy.com
Authorization: Bearer {{token}}

### 8. Criar Deploy
POST {{baseUrl}}/api/deploys
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "siteName": "MeuSiteTest",
  "applicationName": "MinhaAppTest",
  "comandos": [
    "git clone https://github.com/user/repo.git",
    "npm install",
    "npm run build",
    "npm run deploy"
  ],
  "plataforma": "Node.js"
}

### 9. Listar Todos os Deploys
GET {{baseUrl}}/api/deploys
Authorization: Bearer {{token}}

### 10. Obter Deploy por ID (substitua {id} pelo ID retornado)
GET {{baseUrl}}/api/deploys/1
Authorization: Bearer {{token}}

### 11. Atualizar Status do Deploy
PUT {{baseUrl}}/api/deploys/1/status
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "Em Progresso",
  "mensagem": "Executando comandos de build"
}

### 12. Atualizar Status para Sucesso
PUT {{baseUrl}}/api/deploys/1/status
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "Sucesso",
  "mensagem": "Deploy realizado com sucesso. Aplicação disponível."
}

### 13. Obter Deploys por Site
GET {{baseUrl}}/api/deploys/site/MeuSiteTest
Authorization: Bearer {{token}}

### 14. Obter Deploys Recentes
GET {{baseUrl}}/api/deploys/recentes?quantidade=5
Authorization: Bearer {{token}}

### 15. Criar Segundo Usuário (Operador)
POST {{baseUrl}}/api/usuarios
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "nome": "Maria Operadora",
  "email": "maria@empresa.com",
  "senha": "operadora123",
  "acessoNivelId": 2
}

### 16. Login como Operador
# @name loginOperador
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "maria@empresa.com",
  "password": "operadora123"
}

### 17. Criar Deploy como Operador
POST {{baseUrl}}/api/deploys
Authorization: Bearer {{loginOperador.response.body.token}}
Content-Type: application/json

{
  "siteName": "SiteOperador",
  "comandos": [
    "echo 'Deploy do operador'",
    "echo 'Testando permissões'"
  ],
  "plataforma": "Script"
}

### 18. Tentar Listar Usuários como Operador (deve falhar)
GET {{baseUrl}}/api/usuarios
Authorization: Bearer {{loginOperador.response.body.token}}

### 19. Listar Deploys como Operador (só vê os próprios)
GET {{baseUrl}}/api/deploys
Authorization: Bearer {{loginOperador.response.body.token}}

### 20. Teste de Validação - Criar Usuário com Email Duplicado
POST {{baseUrl}}/api/usuarios
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "nome": "Teste Duplicado",
  "email": "admin@customdeploy.com",
  "senha": "teste123",
  "acessoNivelId": 2
}

### 21. Teste de Validação - Criar Deploy sem Comandos
POST {{baseUrl}}/api/deploys
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "siteName": "SiteSemComandos",
  "comandos": []
}

### 22. Excluir Deploy (Admin only)
DELETE {{baseUrl}}/api/deploys/1
Authorization: Bearer {{token}}

### 23. Desativar Usuário
PUT {{baseUrl}}/api/usuarios/2
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "ativo": false
}

### 24. Tentar Login com Usuário Desativado (deve falhar)
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "joao@empresa.com",
  "password": "senha123"
}

### 25. Reativar Usuário
PUT {{baseUrl}}/api/usuarios/2
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "ativo": true
}

### 26. Excluir Usuário (Admin only)
DELETE {{baseUrl}}/api/usuarios/2
Authorization: Bearer {{token}}

### 27. Health Check
GET {{baseUrl}}/health

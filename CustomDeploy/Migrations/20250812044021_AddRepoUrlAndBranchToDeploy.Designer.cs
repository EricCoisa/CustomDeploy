// <auto-generated />
using System;
using CustomDeploy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomDeploy.Migrations
{
    [DbContext(typeof(CustomDeployDbContext))]
    [Migration("20250812044021_AddRepoUrlAndBranchToDeploy")]
    partial class AddRepoUrlAndBranchToDeploy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("CustomDeploy.Models.Entities.AcessoNivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("IX_AcessoNivel_Nome");

                    b.ToTable("AcessoNiveis", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CriadoEm = new DateTime(2025, 8, 12, 4, 40, 21, 500, DateTimeKind.Utc).AddTicks(945),
                            Nome = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            CriadoEm = new DateTime(2025, 8, 12, 4, 40, 21, 500, DateTimeKind.Utc).AddTicks(947),
                            Nome = "Operador"
                        });
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.Deploy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Branch")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("BuildOutput")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("Mensagem")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Plataforma")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RepoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Data")
                        .HasDatabaseName("IX_Deploy_Data");

                    b.HasIndex("SiteName")
                        .HasDatabaseName("IX_Deploy_SiteName");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Deploy_Status");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("IX_Deploy_UsuarioId");

                    b.ToTable("Deploys", (string)null);
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.DeployComando", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comando")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("DeployId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExecutadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mensagem")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Ordem")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeployId")
                        .HasDatabaseName("IX_DeployComando_DeployId");

                    b.HasIndex("DeployId", "Ordem")
                        .IsUnique()
                        .HasDatabaseName("IX_DeployComando_DeployId_Ordem");

                    b.ToTable("DeployComandos", (string)null);
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.DeployHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("DeployId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensagem")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Data")
                        .HasDatabaseName("IX_DeployHistorico_Data");

                    b.HasIndex("DeployId")
                        .HasDatabaseName("IX_DeployHistorico_DeployId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_DeployHistorico_Status");

                    b.ToTable("DeployHistoricos", (string)null);
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Usuario_Email");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.UsuarioAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcessoNivelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AcessoNivelId")
                        .HasDatabaseName("IX_UsuarioAcesso_AcessoNivelId");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasDatabaseName("IX_UsuarioAcesso_UsuarioId");

                    b.ToTable("UsuarioAcessos", (string)null);
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.Deploy", b =>
                {
                    b.HasOne("CustomDeploy.Models.Entities.Usuario", "Usuario")
                        .WithMany("Deploys")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.DeployComando", b =>
                {
                    b.HasOne("CustomDeploy.Models.Entities.Deploy", "Deploy")
                        .WithMany("DeployComandos")
                        .HasForeignKey("DeployId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deploy");
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.DeployHistorico", b =>
                {
                    b.HasOne("CustomDeploy.Models.Entities.Deploy", "Deploy")
                        .WithMany("DeployHistoricos")
                        .HasForeignKey("DeployId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deploy");
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.UsuarioAcesso", b =>
                {
                    b.HasOne("CustomDeploy.Models.Entities.AcessoNivel", "AcessoNivel")
                        .WithMany("UsuarioAcessos")
                        .HasForeignKey("AcessoNivelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CustomDeploy.Models.Entities.Usuario", "Usuario")
                        .WithOne("UsuarioAcesso")
                        .HasForeignKey("CustomDeploy.Models.Entities.UsuarioAcesso", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcessoNivel");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.AcessoNivel", b =>
                {
                    b.Navigation("UsuarioAcessos");
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.Deploy", b =>
                {
                    b.Navigation("DeployComandos");

                    b.Navigation("DeployHistoricos");
                });

            modelBuilder.Entity("CustomDeploy.Models.Entities.Usuario", b =>
                {
                    b.Navigation("Deploys");

                    b.Navigation("UsuarioAcesso")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
